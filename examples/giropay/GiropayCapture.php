<?php
define('__GIROCHECKOUT_SDK_DEBUG__',true);

/**
 * Sample code for GiroCheckout integration of a giropay capture transaction
 *
 * Call through web server in two steps:
 * 1) Without arguments for initial AUTH transaction: http://localhost/GiropayCapture.php, copy displayed reference
 * 2) With reference code from AUTH for CAPTURE, parameter mode=cap (for capture), parameter ref for reference:
 * http://localhost/GiropayCapture.php?mode=cap&ref=66e3ebc0-6cff-4fa9-acb9-c52e6e9fe993
 * 3) Alternatively, you may skip the first step if you already have a reference to a giropay authorization
 * and specify the reference directly in the command line or in the commented field $strReference below.
 *
 * @filesource
 * @package Samples
 * @version $Revision: 109 $ / $Date: 2015-06-01 13:37:30 +0200 (Mo, 01 Jun 2015) $
 */
require '../vendor/autoload.php';
use girosolution\GiroCheckout_SDK\GiroCheckout_SDK_Request;
use girosolution\GiroCheckout_SDK\GiroCheckout_SDK_Request_Cart;
use girosolution\GiroCheckout_SDK\helper\GiroCheckout_SDK_TransactionType_helper;

/**
 * configuration of the merchants identifier, project and password
 * this information can be found in the GiroCockpit's project settings
 */
$merchantID = 0;        // Your merchant ID (Verkaufer-ID)
$projectID = 0;         // Your project ID (Projekt-ID)
$projectPassword = "";  // Your project password

// Optionally skip first step and specify reference directly
//$strReference = "66e3ebc0-6cff-4fa9-acb9-c509af5fe993";

if( !empty($strReference) ) {
  $ref = $strReference;
  $mode = "cap";
}

if( isset($_GET["mode"]) ) {
  $mode = $_GET["mode"];
}
if( isset($_GET["ref"]) ) {
  $ref = $_GET["ref"];
}

if( !isset($mode) ) {
  /* STEP 1: init giropay AUTH transaction and parameters */
  try {

    $oCart = new GiroCheckout_SDK_Request_Cart();
    $oCart->addItem( "Bobbycar", 3, 2599, "800001303" );
    $oCart->addItem( "Helm", 1, 1853 );

    $request = new GiroCheckout_SDK_Request( GiroCheckout_SDK_TransactionType_helper::TRANS_TYPE_GIROPAY_TRANSACTION );
    $request->setSecret($projectPassword);

    $request->addParam('merchantId',$merchantID)
            ->addParam('projectId',$projectID)
            ->addParam('merchantTxId',"123456")
            ->addParam('amount',5050)
            ->addParam('currency','EUR')
            ->addParam('purpose','Zweck')
            ->addParam('type', 'AUTH')
            ->addParam('shippingAddresseFirstName','Max')
            ->addParam('shippingAddresseLastName','Mustermann')
            ->addParam('shippingZipCode','12345')
            ->addParam('shippingCity','Musterstadt')
            ->addParam('shippingCountry','DE')
            ->addParam('cart', $oCart)
	          ->addParam('urlRedirect','https://www.my-domain.de/girocheckout/redirect.php')
	          ->addParam('urlNotify','https://www.my-domain.de/girocheckout/notify.php')

            //the hash field is auto generated by the SDK
            ->submit();

    //echo "<pre>"; print_r($request->getResponseRaw()); echo "</pre><br/>";

    // if transaction succeeded update your local system and redirect the customer
    if($request->requestHasSucceeded()) {
      $request->getResponseParam('rc');
      $request->getResponseParam('msg');
      $strReference = $request->getResponseParam('reference');
      $request->getResponseParam('redirect');

      $request->redirectCustomerToPaymentProvider();
    }

    // if the transaction did not succeed update your local system, get the responsecode and notify the customer
    else {
      $request->getResponseParam('rc');
      $request->getResponseParam('msg');
      $request->getResponseMessage($request->getResponseParam('rc'),'DE');
    }
  }
  catch (Exception $e) { echo $e->getMessage(); }
}
elseif( $mode == "cap" ) {

  // STEP 2: Do Capture
  if( !isset($ref) ) {
    echo "Reference must be given as ref parameter.<br/>";
    exit;
  }

  //echo "Orig Trx Ref: $ref<br/>";

  /* init giropay transaction and parameters */
  try {
    $request = new GiroCheckout_SDK_Request( GiroCheckout_SDK_TransactionType_helper::TRANS_TYPE_GIROPAY_CAPTURE );
    $request->setSecret($projectPassword);

    $request->addParam('merchantId',$merchantID)
            ->addParam('projectId',$projectID)
            ->addParam('merchantTxId',"123456")
            ->addParam('amount',200)  // Anzahlung
            ->addParam('currency','EUR')
            ->addParam('purpose','Capture des vorangeg. Auth')
            ->addParam('reference', $ref)
            ->addParam('merchantReconciliationReferenceNumber','7892-3873428')
            ->addParam('final', 0)

            //the hash field is auto generated by the SDK
            ->submit();

    echo "<pre>"; print_r($request->getResponseRaw()); echo "</pre><br/>";

    /* if transaction succeeded update your local system an redirect the customer */
    if($request->requestHasSucceeded()) {
      $request->getResponseParam('rc');
      $request->getResponseParam('msg');
      $request->getResponseParam('reference');
      $request->getResponseParam('resultPayment');

      //$request->redirectCustomerToPaymentProvider();
    }

    /* if the transaction did not succeed update your local system, get the responsecode and notify the customer */
    else {
      $request->getResponseParam('rc');
      $request->getResponseParam('msg');
      $request->getResponseMessage($request->getResponseParam('rc'),'DE');
    }
  }
  catch (Exception $e) {
    echo $e->getMessage();
  }
}